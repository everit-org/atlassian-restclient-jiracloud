/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-636312f2dc6e26921216979d4ae12655beeff255
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.jiracloud.v2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.everit.atlassian.restclient.jiracloud.v2.model.IssueBean;
import org.everit.atlassian.restclient.jiracloud.v2.model.JsonTypeBean;

/**
 * The result of a JQL search with issues reconsilation.
 */
@ApiModel(description = "The result of a JQL search with issues reconsilation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-31T17:15:14.708+02:00[Europe/Prague]")
public class SearchAndReconcileResults {
  @JsonProperty("issues")
  private List<IssueBean> issues = new ArrayList<>();

  @JsonProperty("names")
  private Map<String, String> names = new HashMap<>();

  @JsonProperty("nextPageToken")
  private String nextPageToken;

  @JsonProperty("schema")
  private Map<String, JsonTypeBean> schema = new HashMap<>();

   /**
   * The list of issues found by the search or reconsiliation.
   * @return issues
  **/
  @ApiModelProperty(value = "The list of issues found by the search or reconsiliation.")
  public List<IssueBean> getIssues() {
    return issues;
  }

   /**
   * The ID and name of each field in the search results.
   * @return names
  **/
  @ApiModelProperty(value = "The ID and name of each field in the search results.")
  public Map<String, String> getNames() {
    return names;
  }

   /**
   * Continuation token to fetch the next page. If this result represents the last or the only page this token will be null. This token will expire in 7 days.
   * @return nextPageToken
  **/
  @ApiModelProperty(value = "Continuation token to fetch the next page. If this result represents the last or the only page this token will be null. This token will expire in 7 days.")
  public String getNextPageToken() {
    return nextPageToken;
  }

   /**
   * The schema describing the field types in the search results.
   * @return schema
  **/
  @ApiModelProperty(value = "The schema describing the field types in the search results.")
  public Map<String, JsonTypeBean> getSchema() {
    return schema;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchAndReconcileResults searchAndReconcileResults = (SearchAndReconcileResults) o;
    return Objects.equals(this.issues, searchAndReconcileResults.issues) &&
        Objects.equals(this.names, searchAndReconcileResults.names) &&
        Objects.equals(this.nextPageToken, searchAndReconcileResults.nextPageToken) &&
        Objects.equals(this.schema, searchAndReconcileResults.schema);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issues, names, nextPageToken, schema);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchAndReconcileResults {\n");
    
    sb.append("    issues: ").append(toIndentedString(issues)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

