/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-636312f2dc6e26921216979d4ae12655beeff255
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.jiracloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * IssueLimitReportResponseBean
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-31T17:15:41.549+02:00[Europe/Prague]")
public class IssueLimitReportResponseBean {
  @JsonProperty("issuesApproachingLimit")
  private Map<String, Map<String, Long>> issuesApproachingLimit = new HashMap<>();

  @JsonProperty("issuesBreachingLimit")
  private Map<String, Map<String, Long>> issuesBreachingLimit = new HashMap<>();

  @JsonProperty("limits")
  private Map<String, Integer> limits = new HashMap<>();

  public IssueLimitReportResponseBean issuesApproachingLimit(Map<String, Map<String, Long>> issuesApproachingLimit) {
    this.issuesApproachingLimit = issuesApproachingLimit;
    return this;
  }

  public IssueLimitReportResponseBean putIssuesApproachingLimitItem(String key, Map<String, Long> issuesApproachingLimitItem) {
    if (this.issuesApproachingLimit == null) {
      this.issuesApproachingLimit = new HashMap<>();
    }
    this.issuesApproachingLimit.put(key, issuesApproachingLimitItem);
    return this;
  }

   /**
   * A list of ids of issues approaching the limit and their field count
   * @return issuesApproachingLimit
  **/
  @ApiModelProperty(value = "A list of ids of issues approaching the limit and their field count")
  public Map<String, Map<String, Long>> getIssuesApproachingLimit() {
    return issuesApproachingLimit;
  }

  public void setIssuesApproachingLimit(Map<String, Map<String, Long>> issuesApproachingLimit) {
    this.issuesApproachingLimit = issuesApproachingLimit;
  }

  public IssueLimitReportResponseBean issuesBreachingLimit(Map<String, Map<String, Long>> issuesBreachingLimit) {
    this.issuesBreachingLimit = issuesBreachingLimit;
    return this;
  }

  public IssueLimitReportResponseBean putIssuesBreachingLimitItem(String key, Map<String, Long> issuesBreachingLimitItem) {
    if (this.issuesBreachingLimit == null) {
      this.issuesBreachingLimit = new HashMap<>();
    }
    this.issuesBreachingLimit.put(key, issuesBreachingLimitItem);
    return this;
  }

   /**
   * A list of ids of issues breaching the limit and their field count
   * @return issuesBreachingLimit
  **/
  @ApiModelProperty(value = "A list of ids of issues breaching the limit and their field count")
  public Map<String, Map<String, Long>> getIssuesBreachingLimit() {
    return issuesBreachingLimit;
  }

  public void setIssuesBreachingLimit(Map<String, Map<String, Long>> issuesBreachingLimit) {
    this.issuesBreachingLimit = issuesBreachingLimit;
  }

  public IssueLimitReportResponseBean limits(Map<String, Integer> limits) {
    this.limits = limits;
    return this;
  }

  public IssueLimitReportResponseBean putLimitsItem(String key, Integer limitsItem) {
    if (this.limits == null) {
      this.limits = new HashMap<>();
    }
    this.limits.put(key, limitsItem);
    return this;
  }

   /**
   * The fields and their defined limits
   * @return limits
  **/
  @ApiModelProperty(value = "The fields and their defined limits")
  public Map<String, Integer> getLimits() {
    return limits;
  }

  public void setLimits(Map<String, Integer> limits) {
    this.limits = limits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IssueLimitReportResponseBean issueLimitReportResponseBean = (IssueLimitReportResponseBean) o;
    return Objects.equals(this.issuesApproachingLimit, issueLimitReportResponseBean.issuesApproachingLimit) &&
        Objects.equals(this.issuesBreachingLimit, issueLimitReportResponseBean.issuesBreachingLimit) &&
        Objects.equals(this.limits, issueLimitReportResponseBean.limits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issuesApproachingLimit, issuesBreachingLimit, limits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IssueLimitReportResponseBean {\n");
    
    sb.append("    issuesApproachingLimit: ").append(toIndentedString(issuesApproachingLimit)).append("\n");
    sb.append("    issuesBreachingLimit: ").append(toIndentedString(issuesBreachingLimit)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

