/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-636312f2dc6e26921216979d4ae12655beeff255
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.jiracloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.everit.atlassian.restclient.jiracloud.v3.model.FieldCreateMetadata;

/**
 * A page of CreateMetaIssueType with Field.
 */
@ApiModel(description = "A page of CreateMetaIssueType with Field.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-31T17:15:41.549+02:00[Europe/Prague]")
public class PageOfCreateMetaIssueTypeWithField {
  @JsonProperty("fields")
  private List<FieldCreateMetadata> fields = new ArrayList<>();

  @JsonProperty("maxResults")
  private Integer maxResults;

  @JsonProperty("results")
  private List<FieldCreateMetadata> results = new ArrayList<>();

  @JsonProperty("startAt")
  private Long startAt;

  @JsonProperty("total")
  private Long total;

  private HashMap<String, Object> additionalProperties_ = new HashMap<String, Object>();

   /**
   * The collection of FieldCreateMetaBeans.
   * @return fields
  **/
  @ApiModelProperty(value = "The collection of FieldCreateMetaBeans.")
  public List<FieldCreateMetadata> getFields() {
    return fields;
  }

   /**
   * The maximum number of items to return per page.
   * @return maxResults
  **/
  @ApiModelProperty(value = "The maximum number of items to return per page.")
  public Integer getMaxResults() {
    return maxResults;
  }

  public PageOfCreateMetaIssueTypeWithField results(List<FieldCreateMetadata> results) {
    this.results = results;
    return this;
  }

  public PageOfCreateMetaIssueTypeWithField addResultsItem(FieldCreateMetadata resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

   /**
   * Get results
   * @return results
  **/
  @ApiModelProperty(value = "")
  public List<FieldCreateMetadata> getResults() {
    return results;
  }

  public void setResults(List<FieldCreateMetadata> results) {
    this.results = results;
  }

   /**
   * The index of the first item returned.
   * @return startAt
  **/
  @ApiModelProperty(value = "The index of the first item returned.")
  public Long getStartAt() {
    return startAt;
  }

   /**
   * The total number of items in all pages.
   * @return total
  **/
  @ApiModelProperty(value = "The total number of items in all pages.")
  public Long getTotal() {
    return total;
  }


  @com.fasterxml.jackson.annotation.JsonAnyGetter
  public Map<String, Object> any() {
   return this.additionalProperties_;
  }

  @com.fasterxml.jackson.annotation.JsonAnySetter
  public void set(String name, Object value) {
   this.additionalProperties_.put(name, value);
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PageOfCreateMetaIssueTypeWithField pageOfCreateMetaIssueTypeWithField = (PageOfCreateMetaIssueTypeWithField) o;
    return Objects.equals(this.fields, pageOfCreateMetaIssueTypeWithField.fields) &&
        Objects.equals(this.maxResults, pageOfCreateMetaIssueTypeWithField.maxResults) &&
        Objects.equals(this.results, pageOfCreateMetaIssueTypeWithField.results) &&
        Objects.equals(this.startAt, pageOfCreateMetaIssueTypeWithField.startAt) &&
        Objects.equals(this.total, pageOfCreateMetaIssueTypeWithField.total) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields, maxResults, results, startAt, total, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PageOfCreateMetaIssueTypeWithField {\n");
    
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties_)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

