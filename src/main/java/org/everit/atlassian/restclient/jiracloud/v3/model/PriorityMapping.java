/*
 * Copyright Â© 2011 Everit Kft. (http://www.everit.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT-636312f2dc6e26921216979d4ae12655beeff255
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.everit.atlassian.restclient.jiracloud.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Mapping of issue priorities for changes in priority schemes.
 */
@ApiModel(description = "Mapping of issue priorities for changes in priority schemes.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-31T17:15:41.549+02:00[Europe/Prague]")
public class PriorityMapping {
  @JsonProperty("in")
  private Map<String, Long> in = new HashMap<>();

  @JsonProperty("out")
  private Map<String, Long> out = new HashMap<>();

  public PriorityMapping in(Map<String, Long> in) {
    this.in = in;
    return this;
  }

  public PriorityMapping putInItem(String key, Long inItem) {
    if (this.in == null) {
      this.in = new HashMap<>();
    }
    this.in.put(key, inItem);
    return this;
  }

   /**
   * The mapping of priorities for issues being migrated **into** this priority scheme. Key is the old priority ID, value is the new priority ID (must exist in this priority scheme).  E.g. The current priority scheme has priority ID &#x60;10001&#x60;. Issues with priority ID &#x60;10000&#x60; are being migrated into this priority scheme will need mapping to new priorities. The &#x60;in&#x60; mapping would be &#x60;{\&quot;10000\&quot;: 10001}&#x60;.
   * @return in
  **/
  @ApiModelProperty(value = "The mapping of priorities for issues being migrated **into** this priority scheme. Key is the old priority ID, value is the new priority ID (must exist in this priority scheme).  E.g. The current priority scheme has priority ID `10001`. Issues with priority ID `10000` are being migrated into this priority scheme will need mapping to new priorities. The `in` mapping would be `{\"10000\": 10001}`.")
  public Map<String, Long> getIn() {
    return in;
  }

  public void setIn(Map<String, Long> in) {
    this.in = in;
  }

  public PriorityMapping out(Map<String, Long> out) {
    this.out = out;
    return this;
  }

  public PriorityMapping putOutItem(String key, Long outItem) {
    if (this.out == null) {
      this.out = new HashMap<>();
    }
    this.out.put(key, outItem);
    return this;
  }

   /**
   * The mapping of priorities for issues being migrated **out of** this priority scheme. Key is the old priority ID (must exist in this priority scheme), value is the new priority ID (must exist in the default priority scheme). Required for updating an existing priority scheme. Not used when creating a new priority scheme.  E.g. The current priority scheme has priority ID &#x60;10001&#x60;. Issues with priority ID &#x60;10001&#x60; are being migrated out of this priority scheme will need mapping to new priorities. The &#x60;out&#x60; mapping would be &#x60;{\&quot;10001\&quot;: 10000}&#x60;.
   * @return out
  **/
  @ApiModelProperty(value = "The mapping of priorities for issues being migrated **out of** this priority scheme. Key is the old priority ID (must exist in this priority scheme), value is the new priority ID (must exist in the default priority scheme). Required for updating an existing priority scheme. Not used when creating a new priority scheme.  E.g. The current priority scheme has priority ID `10001`. Issues with priority ID `10001` are being migrated out of this priority scheme will need mapping to new priorities. The `out` mapping would be `{\"10001\": 10000}`.")
  public Map<String, Long> getOut() {
    return out;
  }

  public void setOut(Map<String, Long> out) {
    this.out = out;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriorityMapping priorityMapping = (PriorityMapping) o;
    return Objects.equals(this.in, priorityMapping.in) &&
        Objects.equals(this.out, priorityMapping.out);
  }

  @Override
  public int hashCode() {
    return Objects.hash(in, out);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriorityMapping {\n");
    
    sb.append("    in: ").append(toIndentedString(in)).append("\n");
    sb.append("    out: ").append(toIndentedString(out)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

